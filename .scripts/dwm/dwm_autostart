#!/bin/sh
#    _____ _     ____  ____  ____  ____  _____
#   /    // \   /  _ \/  __\/  _ \/  __\/__ __\
#   |  __\| |   | / \||  \/|| / \||  \/|  / \
#   | |   | |_/\| |-|||  __/| \_/||    /  | |
#   \_/   \____/\_/ \|\_/   \____/\_/\_\  \_/

# start by killing all 'dwm_autostart' processes except this one:
ps aux | grep -ie dwm_autostart | grep -v grep | awk '{print $2}' | sed "/$$/d" | xargs kill -9 &

# save logs here:
rm -f "$HOME/.local/share/dwm_autostart.log"
touch "$HOME/.local/share/dwm_autostart.log"
rm -f "$HOME/.local/share/dwm_autostart.errors.log"
touch "$HOME/.local/share/dwm_autostart.errors.log"

# special start function (checks if program is already running, logs and backgrounds process)
start(){
    pidof "$1" >/dev/null 2> /dev/null || "$@" >> "$HOME"/.local/share/dwm_autostart.log 2>> "$HOME"/.local/share/dwm_autostart.errors.log &
}

# enable x settings daemon
start xsettingsd

# enable hotkeys
start sxhkd

# set wallpaper
start wallpaper current

# notifications
start dunst

# network manager applet
start nm-applet

# bluetooth manager applet
start blueman-applet

# automatically lock screen after 10 minutes
start xautolock -time 10 -locker validate_and_lock_screen

# make the mouse invisible after a brief period of not using it.
start unclutter

# conky dashboards
start conky -x 60
start conky -x -1860
start conky -x -3780

# update xrdb database
start xrdb "$HOME/.Xresources"

# enable transparent windows
start picom

# set cursor speed
# wrapped into loop, as sometimes this inexplicably stops working
while true; do
    xset r rate 200 45 &
    sleep 60
done &

# update email inbox every 10 minutes (but only ask once for the password.)
while true; do
    syncmail >/dev/null 2> /dev/null &
    export PASSWORD_STORE_GPG_OPTS="--pinentry-mode error"
    sleep 600s
done &

# update dwm status bar every 10 seconds
while true; do
    sleep 2s
    dwm_status >/dev/null 2> /dev/null &
    sleep 8s
done &

# check battery status every 10 minutes
while true; do
    sleep 10s
    cat /sys/class/power_supply/BAT* > /dev/null 2> /dev/null || break
    capacity="$(cat /sys/class/power_supply/BAT*/capacity | head -1)"
    [ -z "$capacity" ] && break
    batstatus=$(cat /sys/class/power_supply/BAT*/status | head -1)
    if [ "$batstatus" = "Discharging" ] && [ "$capacity" -lt 5 ]; then
        notify-send --urgency=CRITICAL "battery low" "ï‰„   $capacity%" &
    fi
    sleep 590s
done &

# update weather report every hour
while true; do
    sleep 10s
    update_weather >/dev/null 2> /dev/null &
    sleep 3590s
done &

# sync joplin notes every hour
while true; do
    sleep 10s
    joplin-sync >/dev/null 2> /dev/null &
    sleep 3590s
done &

# export possible screenlayouts and set default one with `arandr`
sleep 1 && default_screenlayout >/dev/null 2> /dev/null &
