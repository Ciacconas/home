#!/usr/bin/env bash
#    _____ _     ____  ____  ____  ____  _____
#   /    // \   /  _ \/  __\/  _ \/  __\/__ __\
#   |  __\| |   | / \||  \/|| / \||  \/|  / \
#   | |   | |_/\| |-|||  __/| \_/||    /  | |
#   \_/   \____/\_/ \|\_/   \____/\_/\_\  \_/

# start by killing all 'dwm_autostart' processes except this one:
ps aux | grep -ie dwm_autostart | grep -v grep | awk '{print $2}' | sed "/$$/d" | xargs kill -9 &

# save logs here:
rm -f $HOME/.local/share/dwm_autostart.log
touch $HOME/.local/share/dwm_autostart.log
rm -f $HOME/.local/share/dwm_autostart.errors.log
touch $HOME/.local/share/dwm_autostart.errors.log

# special start function (checks if program is already running, logs and backgrounds process)
start(){
    pidof $1 &> /dev/null || $@ >> $HOME/.local/share/dwm_autostart.log 2>> $HOME/.local/share/dwm_autostart.errors.log &
}

# enable hotkeys
start sxhkd

# set wallpaper
start wallpaper current

# enable transparent windows
if [ -f "$HOME/.config/picom/blur-kern" ]; then
    start picom --blur-kern=$(cat $HOME/.config/picom/blur-kern)
else
    start picom
fi

# update xrdb database
[ -f ~/.Xresources ] && xrdb ~/.Xresources

# export your desired screenlayout with `arandr`
start default_screenlayout

# notifications
start dunst

# network manager applet (in most right corner of the screen)
start nm-applet

# automatically lock screen after 10 minutes
start xautolock -time 10 -locker validate_and_lock_screen

# make the mouse invisible after a brief period of not using it.
start unclutter

# conky dashboards
start conky -c $HOME/.config/conky/conky.conf -x 60
start conky -c $HOME/.config/conky/conky.conf -x -1860
start conky -c $HOME/.config/conky/conky.conf -x -3780

# set cursor speed
# wrapped into loop, as sometimes this inexplicably stops working
while true; do
    xset r rate 200 45 &
    sleep 60
done &

# update dwm status bar every 10 seconds
while true; do
    sleep 2s
    dwm_status &> /dev/null &
    sleep 8s
done &

# check battery status every 10 minutes
while true; do
    sleep 10s
    battery=$(acpi -b 2> /dev/null)
    percentage=$(echo $battery |  sed 's/^.*, \([0-9]*\)%.*$/\1/g')
    if [[ $battery = *Discharging* && $percentage -lt 5 ]]; then
        notify-send --urgency=CRITICAL "battery low" "ï‰„   $percentage%" &
    fi
    sleep 590s
done &

# update weather report every hour
while true; do
    sleep 10s
    update_weather &> /dev/null &
    sleep 3590s
done &

# update email inbox every 10 minutes (but only if gpg password is cached)
while true; do
    sleep 10s
    export PASSWORD_STORE_GPG_OPTS="--pinentry-mode error"
    mbsync --all &> /dev/null &
    sleep 590s
done &

# sync joplin notes every hour
while true; do
    sleep 10s
    joplin-sync &> /dev/null &
    sleep 3590s
done &

