#!/usr/bin/python3
""" Open as webapp """

# imports
import os
import re
import sys
import argparse
import subprocess

def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument("address", help="web adress to open as webapp")
    args = parser.parse_args()
    return args

def exists(browser):
    if not browser:
        return False
    with open(os.devnull, "w") as out:
        browser_exists = not subprocess.call(["which", browser], stdout=out, stderr=out)
    return browser_exists

def parse_address(address):
    if not address.startswith("http://") and not address.startswith("https://"):
        while "//" in address:
            address = address.replace("//","/")
        address = address if os.path.exists(address) else f"http://{address}"
    while "///" in address:
        address = address.replace("///","//")
    if not address.startswith("http://") and not address.startswith("https://"):
        address = f"file:///{address}"
    return address

def parse_natifier_name(parsed_address):
    """ transform url to nativefier app name

    Note:
        natifier app should be created inside ~/.webapps with the following
        command::

            nativefier [url] --name [url]
    """
    http = re.sub("^https?://", "http", parsed_address)
    http = http.replace("/","").replace(":","")
    https = re.sub("^http", "https", http)
    http = os.path.expanduser(f"~/.webapps/{http}-linux-x64/{http}")
    https = os.path.expanduser(f"~/.webapps/{https}-linux-x64/{https}")
    return http, https

def run_and_exit(command):
    print(" ".join(command))
    with open(os.devnull, "w") as out:
        subprocess.call(command, stdout=out, stderr=out)
    exit()

if __name__ == "__main__":
    args = parse_args()
    address = parse_address(args.address)
    nativefier_http, nativefier_https = parse_natifier_name(address)

    if exists(nativefier_https):
        run_and_exit([nativefier_https])

    if exists(nativefier_http):
        run_and_exit([nativefier_http])

    if exists("chromium"):
        run_and_exit(["chromium", f"--app={address}"])

    browser = os.environ.get("BROWSER")
    if exists(browser):
        run_and_exit([browser, address])

    if exists("waterfox"):
        run_and_exit(["waterfox", f"--new-window", address])

    if exists("firefox"):
        run_and_exit(["firefox", f"--new-window", address])

