#!/usr/bin/env bash

message() {
    if [ $1 ]; then
        notify-send "$3 $2" "success!"
    else
        notify-send "$3 $2" "failed."
    fi
}

services(){
    find /etc/systemd/system -maxdepth 1 -type f -iname "*.service" | sed 's/@\.service//g' | sed 's/\.service//g' | sed 's|/etc/systemd/system/||g'
    # extra entry for sshd:
    find /usr/lib/systemd/system -maxdepth 1 -type f -iname "*.service" | grep sshd.service | sed 's/@\.service//g' | sed 's/\.service//g' | sed 's|/usr/lib/systemd/system/||g'
    # extra entry for jellyfin:
    find /usr/lib/systemd/system -maxdepth 1 -type f -iname "*.service" | grep jellyfin.service | sed 's/@\.service//g' | sed 's/\.service//g' | sed 's|/usr/lib/systemd/system/||g'
    # extra entry for cups:
    find /usr/lib/systemd/system -maxdepth 1 -type f -iname "*.service" | grep cupsd.service | sed 's/@\.service//g' | sed 's/\.service//g' | sed 's|/usr/lib/systemd/system/||g'
}

service=$(services | sort | dmenu -l 20 -p "toggle-service" $@)

if [ ! $service ]; then
    notify-send "no service selected"
    exit 1
fi

if [[ $service == *:* ]]; then
    notify-send "no valid service selected"
    exit 1
fi


if [[ $(systemctl is-active $service) == "active" ]]; then
    sudo -A -p "[sudo] password to stop '$service.service'" systemctl stop $service
    message $? $service "stopping..."
    dwm_status
else
    sudo -A -p "[sudo] password to start '$service.service'" systemctl restart $service;
    message $? $service "starting..."
    dwm_status
fi
