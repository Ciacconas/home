#!/usr/bin/env python3

import os
import base64
from subprocess import Popen, call, check_output, PIPE

## The following functons are useful, but are actually not used.........................
# ------------------------------------------------------------------------------------- #
def get_clipboard():
    return check_output(["xclip", "-o"])

def set_clipboard(value):
    echo_out = Popen(["echo", value], stdout=PIPE).stdout
    call(["xclip", "-i"], stdin=echo_out)

def make_screenshot():
    call(["import", "/tmp/screenshot.png"])
    with open("/tmp/screenshot.png", "rb") as file:
        encoded = base64.b64encode(file.read())
    return encoded

def make_screenshot_and_copy_to_clipboard():
    encoded = make_screenshot()
    set_clipboard(encoded)

def make_and_show_screenshot(filename="screenshot.png"):
    encoded = make_screenshot()
    raw_png = base64.decodestring(encoded)
    with open(filename, "wb") as file:
        file.write(raw_png)
    import matplotlib.pyplot as plt
    img = plt.imread(filename)
    plt.imshow(img)
    plt.show()
# ------------------------------------------------------------------------------------- #

def make_and_save_screenshot(filename=None):
    copy_screenshot_to_clipboard = False
    if filename is None:
        # get filename from clipboard
        filename = check_output(["xclip", "-o"]).decode()
        # else, we will save the file as a byte64 string
        if filename is None:
            filename = "/tmp/screenshot.png"
            copy_screenshot_to_clipboard = True

    if not filename.endswith('.png'):
        filename = filename + '.png'

    # make screenshot and save as filename
    # NOTE: imagemagick needs to be installed!
    call(["import", filename])

    if copy_screenshot_to_clipboard:
        # copy the contents of the screenshot as a base64 encoded scring to clipboard:
        with open(filename, "rb") as file:
            img_string = base64.b64encode(file.read())
        filename = b"data:image/png;base64," + img_string

    # copy the filename to the clipboard:
    # NOTE: xclip needs to be installed!
    filename_out = Popen(["echo", filename], stdout=PIPE).stdout
    call(["xclip", "-i"], stdin=filename_out)

    print(filename)

if __name__ == '__main__':
    from sys import argv

    filename = None if len(argv) < 2 else argv[1]
    make_and_save_screenshot(filename)

