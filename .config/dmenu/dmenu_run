#!/usr/bin/python3
#    _____ _     ____  ____  ____  ____  _____
#   /    // \   /  _ \/  __\/  _ \/  __\/__ __\
#   |  __\| |   | / \||  \/|| / \||  \/|  / \
#   | |   | |_/\| |-|||  __/| \_/||    /  | |
#   \_/   \____/\_/ \|\_/   \____/\_/\_\  \_/
#
"""
    Open executable; if executable is not found open it in default browser.
"""

import os
import sys
from subprocess import call, check_output, Popen, PIPE, CalledProcessError


TERMINAL = os.environ.get("TERMINAL")
BROWSER = os.environ.get("BROWSER")
OPEN_IN_TERMINAL=["vifm", "vim"]
DMENU_PATH = check_output(["dmenu_path"]).decode().splitlines()[4:]
DMENU_HISTORY_PATH = os.path.expanduser("~/.config/dmenu/dmenu_history.txt")

def dmenu(list_in, prompt):
    dmenu_in = Popen(["echo", "\n".join(list_in)], stdout=PIPE).stdout
    try:
        choice = check_output(
            ["dmenu", "-l", "20", "-p", prompt] + sys.argv[2:], stdin=dmenu_in
        ).decode()[:-1]
        return choice
    except CalledProcessError:
        pass
    return ""

if __name__ == "__main__":
    with open(DMENU_HISTORY_PATH, "a") as file:
        pass # create file if it does not exist
    with open(DMENU_HISTORY_PATH, "r") as file:
        dmenu_history = file.read().splitlines()

    dmenu_commands = list({k: None for k in dmenu_history[::-1]}) + DMENU_PATH

    choice = dmenu(dmenu_commands, "open")

    if not choice:
        exit(0)

    if choice.split(" ")[0] in OPEN_IN_TERMINAL:
        Popen([TERMINAL, "-e", choice])
    else:
        try:
            Popen(choice.split(" "))
        except FileNotFoundError:
            if "http://" in choice or "https://" in choice or len(choice.split(".")) in (2,3):
                Popen([BROWSER, choice])
            else:
                if os.path.exists(os.path.expanduser("~/.scripts/search")):
                    Popen([os.path.expanduser("~/.scripts/search")] +  choice.split(" ") + ["--dmenuargs"] + sys.argv[2:] + ["-l", "25"])
                else:
                    duckduckgo_query = "https://duckduckgo.com/?q=" + choice.replace(" ", "+")
                    Popen([BROWSER, duckduckgo_query])
                    exit(1) # command given does not exist, it's also not a valid url

    with open(DMENU_HISTORY_PATH, "a") as file:
        file.write(choice+"\n")


